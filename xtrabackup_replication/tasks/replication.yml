---
- name: replication | check for the mysql_replication_user variable
  fail: msg="mysql_replication_user has not been defined."
  when: mysql_replication_user is not defined

- name: replication | check for the mysql_replication_password variable
  fail: msg="mysql_replication_password has not been defined."
  when: mysql_replication_password is not defined

- name: replication | check for the mysql_master_host variable
  fail: msg="mysql_master_host has not been defined."
  when: mysql_master_host is not defined

- name: get master log filename for slave config
  shell: cut -f 1 {{ mysql_datadir }}/xtrabackup_binlog_info
  register: xtrabackup_binlog_file

- name: get master log position for slave config
  shell: cut -f 2 {{ mysql_datadir }}/xtrabackup_binlog_info
  register: xtrabackup_binlog_pos

- name: ensure mysql service is running
  service: name={{ mysql_service_name }} state=started

- name: stop slave for new configuration
  mysql_replication: 
    login_user: root
    login_password: "{{ mysql_root_password }}"
    login_unix_socket: "{{ mysql_socket }}"
    mode: stopslave 

- name: configure slave to replicate with master
  mysql_replication:
    login_user: root
    login_password: "{{ mysql_root_password }}"
    login_unix_socket: "{{ mysql_socket }}"
    mode: changemaster
    master_host: "{{ mysql_master_host }}"
    master_user: "{{ mysql_replication_user }}"
    master_password: "{{ mysql_replication_password }}"
    master_log_file: "{{ xtrabackup_binlog_file.stdout }}"
    master_log_pos: "{{ xtrabackup_binlog_pos.stdout }}"
  when: xtrabackup_binlog_file.stdout != "" and xtrabackup_binlog_pos.stdout != "" and mysql_master_host is defined
  ignore_errors: True

- name: start replication
  mysql_replication:
    login_user: root
    login_password: "{{ mysql_root_password }}"
    login_unix_socket: "{{ mysql_socket }}"
    mode: startslave
  when: mysql_master_host is defined
