---
# tasks file for mysql_benchmark
- name: include os specific variables
  include_vars: "{{ ansible_os_family }}-{{ ansible_distribution_major_version }}.yml"

- name: include RedHat specific tasks
  include: RedHat.yml
  when: ansible_os_family == 'RedHat'

- name: Check for unsupported target operating system
  fail:
    msg: "The operating system of the target machine ({{ inventory_hostname }}) is not currently supported."
  when: mysql_supported_os is not defined

- name: include Percona specific tasks
  include: percona.yml

- name: install required tools on target host
  yum: name={{ item }} state=installed
  with_items:
    - nc
    - tcpdump
  register: tools_install

- name: install required tools on master host
  yum: name={{ item }} state=installed
  with_items:
    - nc
    - tcpdump
  delegate_to: "{{ mysql_master_host }}"
  register: tools_install_master

- name: configure the client password file
  template: src=client_my.cnf.j2 dest=/root/.my.cnf owner=root group=root mode=0600

- name: configure the client password file on master host
  template: src=client_my.cnf.j2 dest=/root/.my.cnf owner=root group=root mode=0600
  delegate_to: "{{ mysql_master_host }}"

- name: fetch the current datetime
  shell: date '+%Y_%m_%d_%H_%M_%S'
  register: current_datetime

- name: capture MySQL production workload
  local_action: >
    script mysql_workload_capture.sh
    --master-host {{ mysql_master_host }}
    --target-host {{ hostvars[inventory_hostname]['ansible_hostname'] }}
    --tcpdump-seconds {{ benchmark_seconds }} --output-dir {{ target_tmpdir }}/{{ current_datetime.stdout }}

- name: replay MySQL production workload to gauge MySQL performance
  local_action: >
    script mysql_workload_replay.sh
    --master-host {{ mysql_master_host }} --compare-host {{ mysql_compare_host }}
    --target-host {{ hostvars[inventory_hostname]['ansible_hostname'] }}
    --target-tmpdir {{ target_tmpdir }}/{{ current_datetime.stdout }}
    --output-dir {{ output_dir }}/{{ current_datetime.stdout }} --cold-run

- name: run pt-upgrade tests
  local_action: >
  script pt_upgrade_test.sh
  --master-host {{ mysql_master_host }} --compare-host {{ mysql_compare_host }}
  --target-host {{ hostvars[inventory_hostname]['ansible_hostname'] }}
  --target-tmpdir {{ target_tmpdir }}/{{ current_datetime.stdout }}
  --output-dir {{ output_dir }}/{{ current_datetime.stdout }}